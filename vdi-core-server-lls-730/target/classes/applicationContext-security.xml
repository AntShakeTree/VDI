<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<security:http >
		<security:http-basic />
		<!-- 增加一个自定义的filter，放在FILTER_SECURITY_INTERCEPTOR之前， 实现用户、角色、权限、资源的数据库管理。 
			11/3/23 -->
<!-- 		<custom-filter ref="customFilter" before="FILTER_SECURITY_INTERCEPTOR" />

 -->	</security:http>

	<!-- 一个自定义的filter，必须包含authenticationManager, accessDecisionManager,securityMetadataSource三个属性。 
		11/3/23 -->
<!-- 	<bean id="customFilter" class="com.crawler.service.sec.CustomFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
 		<property name="accessDecisionManager" ref="customAccessDecisionManager" />
 </bean> -->

	<security:authentication-manager alias="authenticationManager">
		<!-- <authentication-manager > -->
		<security:authentication-provider ref="ticketAuthenticationProvider" />
	</security:authentication-manager>
	

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源。11/3/23 -->
<!-- 	<bean id="customAccessDecisionManager" class="CustomAccessDecisionManager">
	</bean> -->





    <!-- Enable @PreAuthorize and @PostAuthorize annotations -->
    <security:global-method-security pre-post-annotations="enabled">
    </security:global-method-security>


   
</beans>
